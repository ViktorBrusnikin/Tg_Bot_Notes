import os
from aiogram import Router, types
from aiogram.filters import Command

from keyboards.common_keyboards import exit_kb
from tools.create_dir import get_user_dir

router = Router(name=__name__)


@router.message(Command('all'))
async def handle_command_all(message: types.Message):
    user_id = message.from_user.id
    user_dir = get_user_dir(user_id)

    # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—â—ë –Ω–µ—Ç –ø–∞–ø–∫–∏
    if not user_dir.exists():
        await message.answer(
            text=(
                "üì≠ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π –∑–∞–º–µ—Ç–∫–∏.\n"
                "–°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é –∑–∞–º–µ—Ç–∫—É –∫–æ–º–∞–Ω–¥–æ–π /create –∏ –Ω–∞—á–Ω–∏—Ç–µ –∫–æ–Ω—Å–ø–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ –º—ã—Å–ª–∏."
            )
        )
        return

    files = os.listdir(user_dir)
    notes = [f[:-3] for f in files if f.endswith(".md")]

    if not notes:
        await message.answer(
            text=(
                "üì≠ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π –∑–∞–º–µ—Ç–∫–∏.\n"
                "–°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é –∑–∞–º–µ—Ç–∫—É –∫–æ–º–∞–Ω–¥–æ–π /create –∏ –Ω–∞—á–Ω–∏—Ç–µ –∫–æ–Ω—Å–ø–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ –º—ã—Å–ª–∏."
            )
        )
    else:
        notes_list = "\n".join(notes)
        await message.answer(
            text=(
                "üóí –í–æ—Ç —Å–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –∑–∞–º–µ—Ç–æ–∫:\n\n"
                f"{notes_list}\n\n"
                "–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å –ª—é–±—É—é –∏–∑ –Ω–∏—Ö –∫–æ–º–∞–Ω–¥–æ–π /open."
            ),
            reply_markup=exit_kb(),
        )