from aiogram import types, F, Router
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext

from keyboards.common_keyboards import abstract_kb_builder, exit_kb
from routers.work_w_notes.states import Notes
from tools.convert_path import convert_filename_to_path

router = Router(name=__name__)


@router.message(Command('open'))
async def handle_command_open(message: types.Message, state: FSMContext):
    await message.answer(
        text="üìÇ –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å.",
        reply_markup=exit_kb(),
    )

    await state.set_state(Notes.open_note)


@router.message(Notes.open_note, F.text)
async def handle_open_note(message: types.Message, state: FSMContext):
    filename = message.text.strip()

    filepath = convert_filename_to_path(message.from_user.id, filename)

    if not filepath:
        await message.answer("‚ö†Ô∏è –§–∞–π–ª —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    await message.answer(
        text=(
            f"‚úÖ –§–∞–π–ª <b>{filename}.md</b> —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç!\n"
            "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –∏–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ –º—ã—Å–ª–∏."
        ),
        reply_markup=abstract_kb_builder(),
    )

    await state.update_data(filepath=filepath)
    await state.set_state(Notes.abstract)


@router.message(Notes.open_note)
async def handle_invalid_open_note(message: types.Message):
    await message.answer(
        text=(
            "‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏.\n"
            "–ß—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –∑–∞–º–µ—Ç–∫–∏ ‚Äî –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é¬ª."
        ),
        reply_markup=exit_kb(),
    )